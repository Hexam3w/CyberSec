>TCP Dump<

Is a network traffic-capturing tool

tcpdump - This command alone will only tell us if TCPdump is installed
For it to work effectively we need to tell it where to listen, write, and how to display the packets

>Specify the network internface<

For this, we use the command -i INTERFACE
To have a list of interfaces we can use the command IP address show

Example -i eth0

>Save the Captured files<

To save files we use the command -w FILE

The file extension is set to .pcap

>Read Captured Packets from a file<

To read a file we can use TCPdump with the command -r FILE 

>Limit the number of captured Packets<

We can specify a limited number of packets to capture by using the -c COUNT command.
If we don't specify the capture will run indefinitely until we CTRL-C

>Dont Resolve IP Addresses and Port Numbers<
By default, TCPdump will resolve IPs and show us friendly domain names.
We can avoid this so it does not have to do all these DNS lookups by using the -n argument.

Ports will be also resolved (Port 80 will be shown as HTTP) 
To avoid this we can use -nn to stop both DNS and PORT from being resolved

>Produce (More) Verbose Output<

To print more details we can use the command -v (TTL, identification, Total length, options)
There are also the command -vv  and -vvv that will produce even more verbose

Command Summary:
Command 		Explanation
tcpdump -i INTERFACE 	Captures packets on a specific network interface
tcpdump -w FILE 	Writes captured packets to a file
tcpdump -r FILE 	Reads captured packets from a file
tcpdump -c COUNT 	Captures a specific number of packets
tcpdump -n 	Don’t resolve IP addresses
tcpdump -nn 	Don’t resolve IP addresses and don’t resolve protocol numbers
tcpdump -v 	Verbose display; verbosity can be increased with -vv and -vvv

Examples:
tcpdump -i eth0 -c 50 -v
tcpdump -i wlo1 -w data.pcap
tcpdump -i any -nn

>Filters<

>Filtering by host<

We case use 2 commands so we can capture only a certain host - host IP or host HOSTNAME
We can also limit packets by their source or destination using src host ip or dst host ip respectively.

>Filtering by port<

We can use the command PORT number to filter capture to a certain port.
We can also filter by destination and source using dst src.

>Filtering by Protocol<
We can also limit packet capture to a certain protocol.
For this, we use the protocol name. Examples: ip ip6 udp tcp ICMP

>Logical Operators<

and - Captures packets where both conditions are true
or - Captures packets when either one of the conditions is true
not - Captures packets when a condition is not true

>Filtering Commands Examples<

Command 		Explanation
tcpdump host IP or tcpdump host HOSTNAME 	Filters packets by IP address or hostname
tcpdump src host IP or 	Filters packets by a specific source host
tcpdump dst host IP 	Filters packets by a specific destination host
tcpdump port PORT_NUMBER 	Filters packets by port number
tcpdump src port PORT_NUMBER 	Filters packets by the specified source port number
tcpdump DST port PORT_NUMBER 	Filters packets by the specified destination port number
tcpdump PROTOCOL 	Filters packets by protocol; examples include ip, ip6, and ICMP

>Advanced Filtering Options

filter by Lenght Commands
greater <Lenght>
less <Lenght>

Filter based on TCP Flags

We can use the command tcp[tcpflags]  to filter by tcp flags

The following are available:

    tcp-syn TCP SYN (Synchronize)
    tcp-ack TCP ACK (Acknowledge)
    tcp-fin TCP FIN (Finish)
    tcp-rst TCP RST (Reset)
    tcp-push TCP Push
Commands examples 
tcpdump "tcp[tcpflags] == tcp-syn"

tcpdump "tcp[tcpflags] & tcp-syn != 0"

Let's break it down further:

    tcp[...]: This accesses a specific byte within the TCP header.

    tcp[tcpflags]: This refers to the flags byte in the TCP header. It contains 6 bits (URG, ACK, PSH, RST, SYN, FIN) that control connection behavior.

    tcp-syn: This is a macro defined by tcpdump for the SYN bit (value is 0x02 or 2 in decimal).

    & tcp-syn: This performs a bitwise AND to check whether the SYN flag is set.

    != 0: If the result is not zero, it means the SYN flag is set.

tcpdump "tcp[tcpflags] & (tcp-syn|tcp-ack) != 0"

>Displaying packets<

Helpful commands:

    -q: Quick output; print brief packet information
    -e: Print the link-level header ( we can see the MAC address)
    -A: Show packet data in ASCII
    -xx: Show packet data in hexadecimal format, referred to as hex
    -X: Show packet headers and data in hex and ASCII

